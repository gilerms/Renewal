// ===== Documentação LivedBR ===============================
// = Estrutura do banco de dados de conquistas
// ===== Por: ===============================================
// = equipe de desenvolvimento do rAthena
// ===== Última atualização: ================================
// = 20170531
// ===== Descrição: =========================================
// = Explicação do arquivo achievements_db.yml e estrutura.
// ==========================================================

---------------------------------------

ID: ID de conquista exclusiva.

---------------------------------------

	Grupo: tipo de grupo de conquistas. Cada tipo de conquista chama uma verificação de objetivo específica.
	Grupos válidos:
	AG_ADD_FRIEND - Disparado quando um jogador adiciona um amigo.
	AG_ADVENTURE - não dispara automaticamente. Estes são acionados pelo comando de conclusão do script completo.
	AG_BABY - Desencadeado quando um jogador se torna um emprego de bebê.
	AG_BATTLE - Disparado quando um jogador mata um monstro.
	AG_CHATTING - Desconhecido.
	AG_CHATTING_COUNT - acionado quando um jogador tem uma sala de bate-papo aberta e outros ingressam.
	AG_CHATTING_CREATE - Disparado quando um jogador cria uma sala de chat.
	AG_CHATTING_DYING - Disparado quando um jogador cria uma sala de bate-papo e morre com ela aberta.
	AG_EAT - Desconhecido.
	AG_GET_ITEM - Disparado quando um jogador recebe um item com um valor de venda específico.
	AG_GET_ZENY - Disparado quando um jogador recebe uma quantidade específica de zeny de uma só vez.
	AG_GOAL_ACHIEVE - Acionado quando a classificação de conquista de um jogador aumenta de nível.
	AG_GOAL_LEVEL - Disparado quando o nível base ou o nível de trabalho de um jogador é alterado.
	AG_GOAL_STATUS - Disparado quando as estatísticas da base de um jogador são alteradas.
	AG_HEAR - Desconhecido.
	AG_JOB_CHANGE - Disparado quando a classe de um jogador muda.
	AG_MARRY - desencadeada quando dois jogadores se casam.
	AG_PARTY - Disparado quando um jogador cria um grupo.
	AG_ENCHANT_FAIL - Disparado quando um jogador não consegue refinar um equipamento.
	AG_ENCHANT_SUCCESS - Disparado quando um jogador refina um equipamento com sucesso.
	AG_SEE - Desconhecido.
	AG_SPEND_ZENY - acionado quando um jogador gasta qualquer quantidade de zeny em fornecedores.
	AG_TAMING - Disparado quando um jogador doma um monstro.

---------------------------------------

Nome: nome da conquista. Não é lido na fonte, mas usado para consultas rápidas.

---------------------------------------

Alvo: Uma lista de ID de monstro e valores de contagem que a conquista requer.
A contagem de alvos também pode ser usada para conquistas que mantêm um contador enquanto não estão relacionadas a mortes de monstros.
Limitado a MAX_ACHIEVEMENT_OBJECTIVES.

Exemplo:
  // O jogador deve matar 5 Scorpions e 10 Poring.
  Alvo:
    - MobID: 1001
      Contagem: 5
    - MobID: 1002
      Contagem: 10

Exemplo 2:
  // O jogador deve ter 100 ou mais de valor ARG0. A utilização do valor de contagem desejado é útil para conquistas que são aumentadas em incrementos
  // e não verificado para um total (UI_Type = 1).
  // IE: no arquivo achievement_list.lub, UI_Type 0 é exibido como não incremental enquanto 1 mostra uma barra de progresso para a realização.
  Condição: "ARG0> = 100"
  Alvo:
    - Contagem: 100

---------------------------------------

Condição: Uma declaração condicional que deve ser cumprida para que a conquista seja considerada completa. Aceita constantes de script, variáveis ​​de jogador e
ARGX (onde X é o valor do vetor de argumento). Os valores ARGX são enviados do servidor para o mecanismo de script de conquista em eventos especiais.
Abaixo estão dois exemplos de como o recurso ARGX funciona.

Exemplo:
// Esta função irá enviar 1 argumento (ARG0) com um valor de i + 1 quando um amigo for adicionado.
achievement_update_objective (f_sd, AG_ADD_FRIEND, 1, i + 1);

Exemplo 2:
// Esta função irá enviar 2 argumentos (ARG0 e ARG1) com valores de nível de arma e nível de refinamento, respectivamente, quando um equipamento é
// refinado com sucesso.
achievement_update_objective (sd, AG_REFINE_SUCCESS, 2, sd-> dados_do_inventário [i] -> wlv, sd-> inventory.u.items_inventory [i] .refine);

---------------------------------------

Mapa: um nome de mapa que é usado para o tipo AG_CHATTING que incrementa o contador com base no mapa do jogador.

---------------------------------------

Dependente: uma lista de IDs de conquistas que precisam ser concluídas antes que essa conquista seja considerada completa.

---------------------------------------

Recompensa: uma lista de recompensas que são dadas na conclusão. Todos os campos são opcionais.
  ItemID: ID do item
  Valor: quantidade de ID do item (padrão 1)
  Script: Script de bônus
  TitleID: ID do título

---------------------------------------

Pontuação: pontos de conquista que são entregues após a conclusão.
